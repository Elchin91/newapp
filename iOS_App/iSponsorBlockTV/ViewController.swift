import UIKit
import Python
import BackgroundTasks

class ViewController: UIViewController {
    
    // MARK: - UI Elements
    @IBOutlet weak var statusLabel: UILabel!
    @IBOutlet weak var deviceCountLabel: UILabel!
    @IBOutlet weak var startStopButton: UIButton!
    @IBOutlet weak var settingsButton: UIButton!
    @IBOutlet weak var logTextView: UITextView!
    @IBOutlet weak var activityIndicator: UIActivityIndicatorView!
    
    // MARK: - Properties
    private var isServiceRunning = false
    private var pythonTask: DispatchWorkItem?
    private var logMessages: [String] = []
    
    override func viewDidLoad() {
        super.viewDidLoad()
        setupUI()
        loadConfiguration()
    }
    
    // MARK: - UI Setup
    
    private func setupUI() {
        // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≥–æ–ª–æ–≤–∫–∞
        title = "iSponsorBlockTV"
        
        // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–Ω–æ–ø–æ–∫
        setupButtons()
        
        // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∞
        setupLogView()
        
        // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç–∞—Ç—É—Å–Ω—ã—Ö –º–µ—Ç–æ–∫
        setupStatusLabels()
        
        // –î–æ–±–∞–≤–ª—è–µ–º –ª–æ–≥–æ—Ç–∏–ø
        setupNavigationBar()
    }
    
    private func setupButtons() {
        // –ö–Ω–æ–ø–∫–∞ –∑–∞–ø—É—Å–∫–∞/–æ—Å—Ç–∞–Ω–æ–≤–∫–∏
        startStopButton.layer.cornerRadius = 12
        startStopButton.titleLabel?.font = UIFont.boldSystemFont(ofSize: 18)
        updateStartStopButton()
        
        // –ö–Ω–æ–ø–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫
        settingsButton.layer.cornerRadius = 8
        settingsButton.backgroundColor = UIColor.systemBlue
        settingsButton.setTitleColor(.white, for: .normal)
    }
    
    private func setupLogView() {
        logTextView.layer.cornerRadius = 8
        logTextView.layer.borderWidth = 1
        logTextView.layer.borderColor = UIColor.systemGray4.cgColor
        logTextView.backgroundColor = UIColor.systemGray6
        logTextView.font = UIFont.monospacedSystemFont(ofSize: 12, weight: .regular)
        logTextView.isEditable = false
    }
    
    private func setupStatusLabels() {
        statusLabel.font = UIFont.systemFont(ofSize: 16, weight: .medium)
        deviceCountLabel.font = UIFont.systemFont(ofSize: 14, weight: .regular)
        deviceCountLabel.textColor = UIColor.systemGray
    }
    
    private func setupNavigationBar() {
        // –î–æ–±–∞–≤–ª—è–µ–º —ç–º–æ–¥–∑–∏ –≤ –∑–∞–≥–æ–ª–æ–≤–æ–∫
        let titleLabel = UILabel()
        titleLabel.text = "üö´üì∫ iSponsorBlockTV"
        titleLabel.font = UIFont.boldSystemFont(ofSize: 18)
        titleLabel.textAlignment = .center
        navigationItem.titleView = titleLabel
    }
    
    // MARK: - Configuration
    
    private func loadConfiguration() {
        addLogMessage("üì± –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...")
        
        DispatchQueue.global(qos: .background).async {
            // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∑–∞–≥—Ä—É–∑–∫—É –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ Python
            let deviceCount = self.getDeviceCount()
            
            DispatchQueue.main.async {
                self.updateDeviceCount(deviceCount)
                self.updateStatus("–ì–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ")
                self.addLogMessage("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞")
            }
        }
    }
    
    private func getDeviceCount() -> Int {
        // –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤
        // –í —Ä–µ–∞–ª—å–Ω–æ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –≤—ã–∑–æ–≤ Python –∫–æ–¥–∞
        return 1
    }
    
    // MARK: - Actions
    
    @IBAction func startStopButtonTapped(_ sender: UIButton) {
        if isServiceRunning {
            stopService()
        } else {
            startService()
        }
    }
    
    @IBAction func settingsButtonTapped(_ sender: UIButton) {
        showSettingsAlert()
    }
    
    // MARK: - Service Control
    
    private func startService() {
        guard !isServiceRunning else { return }
        
        addLogMessage("üöÄ –ó–∞–ø—É—Å–∫ —Å–ª—É–∂–±—ã –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ —Ä–µ–∫–ª–∞–º—ã...")
        updateStatus("–ó–∞–ø—É—Å–∫...")
        
        activityIndicator.startAnimating()
        isServiceRunning = true
        updateStartStopButton()
        
        // –ó–∞–ø—É—Å–∫–∞–µ–º Python —Å–µ—Ä–≤–∏—Å –≤ —Ñ–æ–Ω–µ
        pythonTask = DispatchWorkItem { [weak self] in
            self?.runPythonService()
        }
        
        DispatchQueue.global(qos: .background).async(execute: pythonTask!)
    }
    
    private func stopService() {
        guard isServiceRunning else { return }
        
        addLogMessage("‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–ª—É–∂–±—ã...")
        updateStatus("–û—Å—Ç–∞–Ω–æ–≤–∫–∞...")
        
        // –û—Ç–º–µ–Ω—è–µ–º Python –∑–∞–¥–∞—á—É
        pythonTask?.cancel()
        pythonTask = nil
        
        isServiceRunning = false
        
        DispatchQueue.main.async {
            self.activityIndicator.stopAnimating()
            self.updateStartStopButton()
            self.updateStatus("–û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
            self.addLogMessage("‚úÖ –°–ª—É–∂–±–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
        }
    }
    
    private func runPythonService() {
        // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –∑–∞–ø—É—Å–∫ Python –∫–æ–¥–∞ iSponsorBlockTV
        DispatchQueue.main.async {
            self.updateStatus("–†–∞–±–æ—Ç–∞–µ—Ç")
            self.activityIndicator.stopAnimating()
            self.addLogMessage("‚úÖ –°–ª—É–∂–±–∞ –∑–∞–ø—É—â–µ–Ω–∞ –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç")
            self.addLogMessage("üîç –ü–æ–∏—Å–∫ Samsung TV –≤ —Å–µ—Ç–∏...")
            self.addLogMessage("üì∫ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ YouTube –Ω–∞ TV...")
            self.addLogMessage("üõ°Ô∏è –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —Ä–µ–∫–ª–∞–º—ã –∞–∫—Ç–∏–≤–Ω–∞")
        }
        
        // –°–∏–º—É–ª—è—Ü–∏—è —Ä–∞–±–æ—Ç—ã —Å–µ—Ä–≤–∏—Å–∞
        while !Thread.current.isCancelled && isServiceRunning {
            Thread.sleep(forTimeInterval: 5.0)
            
            DispatchQueue.main.async {
                self.addLogMessage("üìä –°–ª—É–∂–±–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ")
            }
        }
    }
    
    // MARK: - UI Updates
    
    private func updateStartStopButton() {
        let title = isServiceRunning ? "‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å" : "‚ñ∂Ô∏è –ó–∞–ø—É—Å—Ç–∏—Ç—å"
        let color = isServiceRunning ? UIColor.systemRed : UIColor.systemGreen
        
        startStopButton.setTitle(title, for: .normal)
        startStopButton.backgroundColor = color
    }
    
    private func updateStatus(_ status: String) {
        statusLabel.text = "–°—Ç–∞—Ç—É—Å: \(status)"
    }
    
    private func updateDeviceCount(_ count: Int) {
        deviceCountLabel.text = "–ù–∞–π–¥–µ–Ω–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤: \(count)"
    }
    
    private func addLogMessage(_ message: String) {
        let timestamp = DateFormatter.localizedString(from: Date(), dateStyle: .none, timeStyle: .medium)
        let logEntry = "[\(timestamp)] \(message)"
        
        logMessages.append(logEntry)
        
        // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π
        if logMessages.count > 100 {
            logMessages.removeFirst()
        }
        
        DispatchQueue.main.async {
            self.logTextView.text = self.logMessages.joined(separator: "\n")
            
            // –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –∫ –ø–æ—Å–ª–µ–¥–Ω–µ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é
            let bottom = NSMakeRange(self.logTextView.text.count - 1, 1)
            self.logTextView.scrollRangeToVisible(bottom)
        }
    }
    
    // MARK: - Settings
    
    private func showSettingsAlert() {
        let alert = UIAlertController(title: "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", message: "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ", preferredStyle: .actionSheet)
        
        alert.addAction(UIAlertAction(title: "üîß –ù–∞—Å—Ç—Ä–æ–∏—Ç—å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞", style: .default) { _ in
            self.showDeviceSetup()
        })
        
        alert.addAction(UIAlertAction(title: "üéØ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏", style: .default) { _ in
            self.showCategoriesSetup()
        })
        
        alert.addAction(UIAlertAction(title: "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", style: .default) { _ in
            self.showStatistics()
        })
        
        alert.addAction(UIAlertAction(title: "‚ÑπÔ∏è –û –ø—Ä–æ–≥—Ä–∞–º–º–µ", style: .default) { _ in
            self.showAbout()
        })
        
        alert.addAction(UIAlertAction(title: "–û—Ç–º–µ–Ω–∞", style: .cancel))
        
        // –î–ª—è iPad
        if let popover = alert.popoverPresentationController {
            popover.sourceView = settingsButton
            popover.sourceRect = settingsButton.bounds
        }
        
        present(alert, animated: true)
    }
    
    private func showDeviceSetup() {
        let alert = UIAlertController(title: "üì∫ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤", message: "–î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ Samsung TV:\n\n1. –í–∫–ª—é—á–∏—Ç–µ TV\n2. –û—Ç–∫—Ä–æ–π—Ç–µ YouTube\n3. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚Üí –°–≤—è–∑–∞—Ç—å —Å —Ç–µ–ª–µ–≤–∏–∑–æ—Ä–æ–º\n4. –í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ —Å–æ–ø—Ä—è–∂–µ–Ω–∏—è", preferredStyle: .alert)
        
        alert.addAction(UIAlertAction(title: "–î–æ–±–∞–≤–∏—Ç—å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ", style: .default) { _ in
            self.addLogMessage("üîß –ó–∞–ø—É—Å–∫ –º–∞—Å—Ç–µ—Ä–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤...")
        })
        
        alert.addAction(UIAlertAction(title: "OK", style: .default))
        
        present(alert, animated: true)
    }
    
    private func showCategoriesSetup() {
        let alert = UIAlertController(title: "üéØ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏", message: "–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å:", preferredStyle: .alert)
        
        let categories = [
            "üí∞ –°–ø–æ–Ω—Å–æ—Ä—Å–∫–∏–µ —Å–µ–≥–º–µ–Ω—Ç—ã",
            "üé¨ –ò–Ω—Ç—Ä–æ/–ê—É—Ç—Ä–æ",
            "üì¢ –°–∞–º–æ—Ä–µ–∫–ª–∞–º–∞",
            "üëÜ –ü—Ä–∏–∑—ã–≤—ã –∫ –¥–µ–π—Å—Ç–≤–∏—é",
            "üéµ –ù–µ –ø–æ —Ç–µ–º–µ –º—É–∑—ã–∫–∞"
        ]
        
        for category in categories {
            alert.addAction(UIAlertAction(title: "‚úì \(category)", style: .default))
        }
        
        alert.addAction(UIAlertAction(title: "–ì–æ—Ç–æ–≤–æ", style: .cancel))
        
        present(alert, animated: true)
    }
    
    private func showStatistics() {
        let alert = UIAlertController(title: "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", message: "–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ —Å–µ–≥–º–µ–Ω—Ç–æ–≤: 42\n–°—ç–∫–æ–Ω–æ–º–ª–µ–Ω–æ –≤—Ä–µ–º–µ–Ω–∏: 15 –º–∏–Ω\n–ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: —Å–µ–π—á–∞—Å", preferredStyle: .alert)
        
        alert.addAction(UIAlertAction(title: "OK", style: .default))
        
        present(alert, animated: true)
    }
    
    private func showAbout() {
        let alert = UIAlertController(title: "‚ÑπÔ∏è –û –ø—Ä–æ–≥—Ä–∞–º–º–µ", message: "iSponsorBlockTV v2.5.3\n\n–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —Ä–µ–∫–ª–∞–º—ã –∏ —Å–ø–æ–Ω—Å–æ—Ä—Å–∫–∏—Ö —Å–µ–≥–º–µ–Ω—Ç–æ–≤ –≤ YouTube –Ω–∞ Samsung TV\n\n–û—Å–Ω–æ–≤–∞–Ω –Ω–∞ –ø—Ä–æ–µ–∫—Ç–µ SponsorBlock", preferredStyle: .alert)
        
        alert.addAction(UIAlertAction(title: "OK", style: .default))
        
        present(alert, animated: true)
    }
    
    // MARK: - URL Scheme Handling
    
    func handleURLScheme(_ url: URL) {
        addLogMessage("üì± –ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞: \(url)")
        
        // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ —á–µ—Ä–µ–∑ URL —Å—Ö–µ–º—ã
        if url.host == "start" {
            startService()
        } else if url.host == "stop" {
            stopService()
        }
    }
} 